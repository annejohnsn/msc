with(LinearAlgebra):
with(combinat, cartprod):
with(padic):

ComputePartialRhoSeq := proc (S, rho) 
# Given an m by n matrix S whose columns represent points of an n-component product space and that has as its i-th row the i-th term in a rho-ordering of that space, compute the (m-1)-th partial sum of the rho-sequence 
# note that S and rho must be compatible and no checking is done to ensure this	
# arg S; an n by m matrix representing a rho-ordering, for example as created by ComputePadicProductOrdering
# arg rho; a compatible metric on the points (rows) in S
# return; a real number, correpsonding to the (m-1)-th term of the partial rho-sequence

    local lastTerm, f, distances, nthTerm;

    #find the last element in the ordering 
    lastTerm := S[RowDimension(S),]; 

    #make a function that calculates the distance from the i-th row of S to the last term in the ordering
    f := proc (i) options operator, arrow; rho(op(convert(lastTerm, list)), op(convert(S[i,], list))) end proc; 

    #run over each row to get the set of all m-1 distances
    distances := map(f, [seq(i, i = 1 .. (RowDimension(S)-1))]);

    #multiply them to get the (m-1)-th term of the rho-ordering
    partialSum := mul(distances);

    return partialSum
end proc;





